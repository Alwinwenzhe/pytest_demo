{"uid":"aa9818d7e1c30aba","name":"test_002_oa[case0]","fullName":"test_case.jnt_inter_case.jnt_app.test_debug.TestDebug#test_002_oa","historyId":"c95c253249099627ef5148169fadc0b6","time":{"start":1709624046001,"stop":1709624046016,"duration":15},"status":"broken","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 19 (char 18)","statusTrace":"self = <pytest_demo.test_case.jnt_inter_case.jnt_app.test_debug.TestDebug object at 0x00000264F7CB4AC0>\ncase = {'Comment': '', 'ID': 'oa_0013_zhuanban_c6', 'advice': '', 'case_description': '选择转办人', ...}\n\n    @allure.step('调试_OA')\n    @pytest.mark.debug\n    # @pytest.mark.parametrize()第一个参数为逗号分隔的字符串列表，第二个参数是值列表parametrize()\n    @pytest.mark.parametrize('case', excel.get_excel_data(\"debug\", \"OA\"))\n    def test_002_oa(self, case):\n        self.d_time.write_time_to_json()\n>       self.new.test_case_method(case)\n\ntest_case\\jnt_inter_case\\jnt_app\\test_debug.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\data_deal.py:242: in test_case_method\n    request_method, expect, api_url, headers, params, global_var,upload_files= self.param_get_deal(case)\ncommon\\data_deal.py:65: in param_get_deal\n    params = json.loads(params)         # 将字符串通过特殊的形式转为python的dict类型\nD:\\Program Files\\Python\\Python39\\lib\\json\\__init__.py:346: in loads\n    return _default_decoder.decode(s)\nD:\\Program Files\\Python\\Python39\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x000002649BD59400>\ns = '{\"assigneeUserId\":j::oaUserId,\"id\":\"oa_task_id\"}', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 19 (char 18)\n\nD:\\Program Files\\Python\\Python39\\lib\\json\\decoder.py:355: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"init_connect","time":{"start":1709624046001,"stop":1709624046001,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 19 (char 18)","statusTrace":"self = <pytest_demo.test_case.jnt_inter_case.jnt_app.test_debug.TestDebug object at 0x00000264F7CB4AC0>\ncase = {'Comment': '', 'ID': 'oa_0013_zhuanban_c6', 'advice': '', 'case_description': '选择转办人', ...}\n\n    @allure.step('调试_OA')\n    @pytest.mark.debug\n    # @pytest.mark.parametrize()第一个参数为逗号分隔的字符串列表，第二个参数是值列表parametrize()\n    @pytest.mark.parametrize('case', excel.get_excel_data(\"debug\", \"OA\"))\n    def test_002_oa(self, case):\n        self.d_time.write_time_to_json()\n>       self.new.test_case_method(case)\n\ntest_case\\jnt_inter_case\\jnt_app\\test_debug.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\data_deal.py:242: in test_case_method\n    request_method, expect, api_url, headers, params, global_var,upload_files= self.param_get_deal(case)\ncommon\\data_deal.py:65: in param_get_deal\n    params = json.loads(params)         # 将字符串通过特殊的形式转为python的dict类型\nD:\\Program Files\\Python\\Python39\\lib\\json\\__init__.py:346: in loads\n    return _default_decoder.decode(s)\nD:\\Program Files\\Python\\Python39\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x000002649BD59400>\ns = '{\"assigneeUserId\":j::oaUserId,\"id\":\"oa_task_id\"}', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 19 (char 18)\n\nD:\\Program Files\\Python\\Python39\\lib\\json\\decoder.py:355: JSONDecodeError","steps":[{"name":"调试_OA","time":{"start":1709624046001,"stop":1709624046002,"duration":1},"status":"broken","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 19 (char 18)\n","statusTrace":"  File \"D:\\Program Files\\Python\\Python39\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"D:\\Scripts\\python_code\\pytest_demo\\test_case\\jnt_inter_case\\jnt_app\\test_debug.py\", line 39, in test_002_oa\n    self.new.test_case_method(case)\n  File \"D:\\Scripts\\python_code\\pytest_demo\\common\\data_deal.py\", line 242, in test_case_method\n    request_method, expect, api_url, headers, params, global_var,upload_files= self.param_get_deal(case)\n  File \"D:\\Scripts\\python_code\\pytest_demo\\common\\data_deal.py\", line 65, in param_get_deal\n    params = json.loads(params)         # 将字符串通过特殊的形式转为python的dict类型\n  File \"D:\\Program Files\\Python\\Python39\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"D:\\Program Files\\Python\\Python39\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"D:\\Program Files\\Python\\Python39\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\n","steps":[],"attachments":[],"parameters":[{"name":"case","value":"{'ID': 'oa_0013_zhuanban_c6', 'case_description': '选择转办人', 'module': 'OA', 'envir': 'jnt_app_dev', 'pre_case': '', 'request_mode': 'PUT', 'case_url': '/oa/admin-api/bpm/task/update-assignee', 'case_header': '{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer j::oa_token\"}', 'case_global_var': '', 'upload_files': '', 'case_preset': '', 'case_params': '{\"assigneeUserId\":j::oaUserId,\"id\":\"oa_task_id\"}', 'case_expect': '操作成功', 'Comment': '', 'advice': ''}"}],"attachmentStep":false,"hasContent":true,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0}],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":true,"stepsCount":1,"shouldDisplayMessage":true,"attachmentsCount":0},"afterStages":[{"name":"init_connect::0","time":{"start":1709624046111,"stop":1709624046111,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"feature","value":"调试demo"},{"name":"tag","value":"debug"},{"name":"parentSuite","value":"test_case.jnt_inter_case.jnt_app"},{"name":"suite","value":"test_debug"},{"name":"subSuite","value":"TestDebug"},{"name":"host","value":"WIN-DVMNCVL70K8"},{"name":"thread","value":"5396-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_case.jnt_inter_case.jnt_app.test_debug"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case","value":"{'ID': 'oa_0013_zhuanban_c6', 'case_description': '选择转办人', 'module': 'OA', 'envir': 'jnt_app_dev', 'pre_case': '', 'request_mode': 'PUT', 'case_url': '/oa/admin-api/bpm/task/update-assignee', 'case_header': '{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer j::oa_token\"}', 'case_global_var': '', 'upload_files': '', 'case_preset': '', 'case_params': '{\"assigneeUserId\":j::oaUserId,\"id\":\"oa_task_id\"}', 'case_expect': '操作成功', 'Comment': '', 'advice': ''}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["debug"]},"source":"aa9818d7e1c30aba.json","parameterValues":["{'ID': 'oa_0013_zhuanban_c6', 'case_description': '选择转办人', 'module': 'OA', 'envir': 'jnt_app_dev', 'pre_case': '', 'request_mode': 'PUT', 'case_url': '/oa/admin-api/bpm/task/update-assignee', 'case_header': '{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer j::oa_token\"}', 'case_global_var': '', 'upload_files': '', 'case_preset': '', 'case_params': '{\"assigneeUserId\":j::oaUserId,\"id\":\"oa_task_id\"}', 'case_expect': '操作成功', 'Comment': '', 'advice': ''}"]}