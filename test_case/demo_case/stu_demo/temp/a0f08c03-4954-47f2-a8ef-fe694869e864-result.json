{"name": "用例标题1", "status": "broken", "statusDetails": {"message": "FileNotFoundError: [Errno 2] No such file or directory: 'E:\\\\Myproject\\\\pytest-allure\\\\test\\\\test_1.jpg'", "trace": "self = <pytest_demo.test_case.demo_case.stu_demo.test_demo.TestAllure object at 0x000001C539FF5D88>\n\n    @allure.title(\"用例标题1\")\n    @allure.story(\"这里是第二个二级标签\")\n    def test_1(self):\n>       allure.attach.file(r'E:\\Myproject\\pytest-allure\\test\\test_1.jpg', '我是附件截图的名字', attachment_type=allure.attachment_type.JPG)\n\ntest_demo.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nJ:\\programe\\python3\\lib\\site-packages\\allure_commons\\_allure.py:182: in file\n    plugin_manager.hook.attach_file(source=source, name=name, attachment_type=attachment_type, extension=extension)\nJ:\\programe\\python3\\lib\\site-packages\\pluggy\\_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\nJ:\\programe\\python3\\lib\\site-packages\\pluggy\\_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\nJ:\\programe\\python3\\lib\\site-packages\\allure_pytest\\listener.py:226: in attach_file\n    self.allure_logger.attach_file(uuid4(), source, name=name, attachment_type=attachment_type, extension=extension)\nJ:\\programe\\python3\\lib\\site-packages\\allure_commons\\reporter.py:114: in attach_file\n    plugin_manager.hook.report_attached_file(source=source, file_name=file_name)\nJ:\\programe\\python3\\lib\\site-packages\\pluggy\\_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\nJ:\\programe\\python3\\lib\\site-packages\\pluggy\\_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\nJ:\\programe\\python3\\lib\\site-packages\\allure_commons\\logger.py:53: in report_attached_file\n    shutil.copy2(source, destination)\nJ:\\programe\\python3\\lib\\shutil.py:266: in copy2\n    copyfile(src, dst, follow_symlinks=follow_symlinks)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsrc = 'E:\\\\Myproject\\\\pytest-allure\\\\test\\\\test_1.jpg', dst = 'J:\\\\programe\\\\python_code\\\\python_code\\\\pytest_demo\\\\test_case\\\\demo_case\\\\stu_demo\\\\temp\\\\48b75323-6e7f-4c81-8b2a-2fa1d5629166-attachment.jpg'\n\n    def copyfile(src, dst, *, follow_symlinks=True):\n        \"\"\"Copy data from src to dst.\n    \n        If follow_symlinks is not set and src is a symbolic link, a new\n        symlink will be created instead of copying the file it points to.\n    \n        \"\"\"\n        if _samefile(src, dst):\n            raise SameFileError(\"{!r} and {!r} are the same file\".format(src, dst))\n    \n        for fn in [src, dst]:\n            try:\n                st = os.stat(fn)\n            except OSError:\n                # File most likely does not exist\n                pass\n            else:\n                # XXX What about other special files? (sockets, devices...)\n                if stat.S_ISFIFO(st.st_mode):\n                    raise SpecialFileError(\"`%s` is a named pipe\" % fn)\n    \n        if not follow_symlinks and os.path.islink(src):\n            os.symlink(os.readlink(src), dst)\n        else:\n>           with open(src, 'rb') as fsrc:\nE           FileNotFoundError: [Errno 2] No such file or directory: 'E:\\\\Myproject\\\\pytest-allure\\\\test\\\\test_1.jpg'\n\nJ:\\programe\\python3\\lib\\shutil.py:120: FileNotFoundError"}, "attachments": [{"name": "我是附件截图的名字", "source": "48b75323-6e7f-4c81-8b2a-2fa1d5629166-attachment.jpg", "type": "image/jpg"}], "start": 1663581628973, "stop": 1663581628973, "uuid": "87381a5a-a085-4a21-b382-0c6e2e758055", "historyId": "3964a115b4b8bf05ff96b0687f40604e", "testCaseId": "3bbf2f255eba186ad91284e15b90bb72", "fullName": "test_case.demo_case.stu_demo.test_demo.TestAllure#test_1", "labels": [{"name": "story", "value": "这里是第二个二级标签"}, {"name": "feature", "value": "这里是一级标签"}, {"name": "parentSuite", "value": "test_case.demo_case.stu_demo"}, {"name": "suite", "value": "test_demo"}, {"name": "subSuite", "value": "TestAllure"}, {"name": "host", "value": "我不帅"}, {"name": "thread", "value": "1128-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.demo_case.stu_demo.test_demo"}]}