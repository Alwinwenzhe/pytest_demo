{"name": "test_004_yaml_add_step[case0]", "status": "broken", "statusDetails": {"message": "TypeError: list indices must be integers or slices, not str", "trace": "self = <pytest_demo.test_case.inter_case.test_ysy_002_health_data.TestYsy002HealthData object at 0x000002474E98E688>\ncase = {'name': '一生约--添加用户步数', 'request': {'headers': {'Content-Type': 'application/json; charset=UTF-8', 'accessToken': '41C...i.yishengyue.cn/api/v1/member/addMenberStep'}, 'validate': [{'equals': {'status_code': 200}}, {'contains': 'code\":0'}]}\nget_token = '41C161B87DA6BF3349F88F490869A699A339AC6BD2A711E06962565F77D3EB398C270C0BCE5F9663F487347F2C61CC0DB1E8FE298603511744188F6A61A923F9'\n\n    @allure.step('添加步数')\n    @pytest.mark.run(order=1)\n    @pytest.mark.demo\n    @pytest.mark.parametrize('case',YamlUtil().read_inter_yaml('temp.yaml'))\n    def test_004_yaml_add_step(self,case,get_token):      # execute_database_sql 引用前后置\n        '''注意：这里得token是通过conftest配置文件获取'''\n        url = case['request']['url']\n        case['request']['headers']['accessToken'] = get_token\n        request_method = case['request']['method']\n        header = case['request']['headers']\n        data = case['request']['params']\n>       assert_info = case['validate']['contains']\nE       TypeError: list indices must be integers or slices, not str\n\ntest_ysy_002_health_data.py:47: TypeError"}, "description": "注意：这里得token是通过conftest配置文件获取", "steps": [{"name": "添加步数", "status": "broken", "statusDetails": {"message": "TypeError: list indices must be integers or slices, not str\n", "trace": "  File \"E:\\programs\\python\\lib\\site-packages\\allure_commons\\_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"E:\\python_code\\pytest_demo\\test_case\\inter_case\\test_ysy_002_health_data.py\", line 47, in test_004_yaml_add_step\n    assert_info = case['validate']['contains']\n"}, "parameters": [{"name": "case", "value": "{'name': '一生约--添加用户步数', 'request': {'url': 'https://api.yishengyue.cn/api/v1/member/addMenberStep', 'method': 'post', 'headers': {'Content-Type': 'application/json; charset=UTF-8', 'enterpriseId': '1122c78ae5d140a5acbaa9e75c8b8994', 'accessToken': '41C161B87DA6BF3349F88F490869A699A339AC6BD2A711E06962565F77D3EB398C270C0BCE5F9663F487347F2C61CC0DB1E8FE298603511744188F6A61A923F9'}, 'params': {'stepNum': 888, 'userId': 15828022852}}, 'validate': [{'equals': {'status_code': 200}}, {'contains': 'code\":0'}]}"}, {"name": "get_token", "value": "'41C161B87DA6BF3349F88F490869A699A339AC6BD2A711E06962565F77D3EB398C270C0BCE5F9663F487347F2C61CC0DB1E8FE298603511744188F6A61A923F9'"}], "start": 1652772145966, "stop": 1652772145967}], "parameters": [{"name": "case", "value": "{'name': '一生约--添加用户步数', 'request': {'url': 'https://api.yishengyue.cn/api/v1/member/addMenberStep', 'method': 'post', 'headers': {'Content-Type': 'application/json; charset=UTF-8', 'enterpriseId': '1122c78ae5d140a5acbaa9e75c8b8994', 'accessToken': '41C161B87DA6BF3349F88F490869A699A339AC6BD2A711E06962565F77D3EB398C270C0BCE5F9663F487347F2C61CC0DB1E8FE298603511744188F6A61A923F9'}, 'params': {'stepNum': 888, 'userId': 15828022852}}, 'validate': [{'equals': {'status_code': 200}}, {'contains': 'code\":0'}]}"}], "start": 1652772145966, "stop": 1652772145967, "uuid": "a75511ac-4418-4c03-9c44-958b6ea3a321", "historyId": "8b8a218a71442497cfff73df7f0499ba", "testCaseId": "9da9ea807328c1d7c59709a7908e70c9", "fullName": "test_case.inter_case.test_ysy_002_health_data.TestYsy002HealthData#test_004_yaml_add_step", "labels": [{"name": "story", "value": "健康模块测试用例"}, {"name": "tag", "value": "demo"}, {"name": "tag", "value": "run(order=1)"}, {"name": "parentSuite", "value": "test_case.inter_case"}, {"name": "suite", "value": "test_ysy_002_health_data"}, {"name": "subSuite", "value": "TestYsy002HealthData"}, {"name": "host", "value": "DESKTOP-64VUMUD"}, {"name": "thread", "value": "13136-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.inter_case.test_ysy_002_health_data"}]}